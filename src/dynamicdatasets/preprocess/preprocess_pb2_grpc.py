# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dynamicdatasets.preprocess.preprocess_pb2 as preprocess__pb2


class PreprocessStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Preprocess = channel.unary_unary(
            '/preprocess.Preprocess/Preprocess',
            request_serializer=preprocess__pb2.PreprocessRequest.SerializeToString,
            response_deserializer=preprocess__pb2.PreprocessResponse.FromString,
        )


class PreprocessServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Preprocess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PreprocessServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Preprocess': grpc.unary_unary_rpc_method_handler(
            servicer.Preprocess,
            request_deserializer=preprocess__pb2.PreprocessRequest.FromString,
            response_serializer=preprocess__pb2.PreprocessResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'preprocess.Preprocess', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


class Preprocess(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Preprocess(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/preprocess.Preprocess/Preprocess',
            preprocess__pb2.PreprocessRequest.SerializeToString,
            preprocess__pb2.PreprocessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata)
