pipeline:
  name: RHO-Loss Test Pipeline
  description: Example pipeline
  version: 1.0.0
model:
  id: ResNet50
  config:
    num_classes: 10
model_storage:
  full_model_strategy:
    name: "PyTorchFullModel"
training:
  gpus: 1
  device: "cpu"
  dataloader_workers: 2
  use_previous_model: True
  initial_model: random
  batch_size: 64
  shuffle: True
  optimizers:
    - name: "default"
      algorithm: "SGD"
      source: "PyTorch"
      param_groups:
        - module: "model"
          config:
            lr: 0.1
            momentum: 0.001
  optimization_criterion:
    name: "CrossEntropyLoss"
  checkpointing:
    activated: False
data:
  dataset_id: image_test_dataset
  transformations: ["transforms.ToTensor()",
                    "transforms.Normalize((0.1307,), (0.3081,))"]
  bytes_parser_function: |
    from PIL import Image
    import io
    def bytes_parser_function(data: bytes) -> Image:
      return Image.open(io.BytesIO(data)).convert("RGB")
trigger:
  id: DataAmountTrigger
  num_samples: 2000
selection_strategy:
  name: CoresetStrategy
  maximum_keys_in_memory: 1000
  storage_backend: "database"
  limit: -1
  tail_triggers: 0
  downsampling_config:
    strategy: RHOLoss
    holdout_set_ratio: 10
    ratio: 60
    il_training_config:
      il_model_id: ResNet18
      il_model_config:
          num_classes: 10
      device: "cpu"
      dataloader_workers: 2
      batch_size: 2
      shuffle: True
      optimizers:
        - name: "default"
          algorithm: "SGD"
          source: "PyTorch"
          param_groups:
            - module: "model"
              config:
                lr: 0.1
                momentum: 0.001
      optimization_criterion:
        name: "CrossEntropyLoss"

