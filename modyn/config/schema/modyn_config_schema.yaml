%YAML 1.1
---
$schema: "http://json-schema.org/draft-04/schema"
id: "http://stsci.edu/schemas/yaml-schema/draft-01"
title: Modyn Configuration
description: |
  This is the configuration file for the Modyn.
  It contains the configuration for the system, adapt as required.
properties:
  project:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the project.
      description:
        type: string
        description: |
          The description of the project.
      version:
        type: string
        description: |
          The version of the project.
  storage:
    type: object
    properties:
      port:
        type: string
        description: |
          The port to use for the storage server.
      hostname:
        type: string
        description: |
          The hostname to use for the storage server.
      sample_batch_size:
        type: number
        description: |
          The size of a batch when requesting new samples from storage. All new samples are returned, however, to reduce 
          the size of a single answer the keys are batched in sizes of `sample_batch_size`. Defaults to 10000.
      sample_dbinsertion_batchsize:
        type: number
        description: |
          How many samples are at least required when scanning new files to trigger an intermediate insertion request.
      insertion_threads:
        type: number
        description: |
          The number of threads used to insert samples into the storage DB. If set to <= 0, multithreaded inserts are disabled.
      retrieval_threads:
        type: number
        description: |
          The number of threads used to get samples from the storage DB. If set to <= 1, multithreaded gets are disabled.
      sample_table_unlogged:
        type: boolean
        description: |
          This configures whether the table storing all samples is UNLOGGED (= high performance) or crash resilient. 
          Defaults to True. For datasets with many samples (such as Criteo), this is recommended for highest insertion performance. 
          In other scenarios, this might not be necessary.
      force_fallback_insert:
        type: boolean
        description: |
          When enabled, always use fallback insert functionality instead of potentially optimized techniques.
      file_watcher_watchdog_sleep_time_s:
        type: number
        description: |
          The time in seconds the file watcher watchdog sleeps between checking if the file watchers are still alive. Defaults to 3.
      datasets:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: |
                The name of the dataset.
            description:
              type: string
              description: |
                The description of the dataset.
            version:
              type: string
              description: |
                The version of the dataset.
            base_path:
              type: string
              description: |
                The base path of the dataset.
            filesystem_wrapper_type:
              type: string
              description: |
                The filesystem wrapper type of the dataset.
            file_wrapper_type:
              type: string
              description: |
                The file wrapper type of the dataset.
            file_wrapper_config:
              type: object
              description: |
                The file wrapper config of the dataset.
              properties:
                file_extension:
                  type: string
                  description: |
                    The file extension of the dataset. Starts with a dot.
                label_file_extension:
                  type: string
                  description: |
                    The label file extension of the dataset. Starts with a dot.
                record_size:
                  type: number
                  description: |
                    [BinaryFileWrapper] The size of each full record in bytes (label + features).
                label_size:
                  type: number
                  description: |
                    [BinaryFileWrapper] The size of the label field in bytes for a binary file wrapper.
                byteorder:
                  type: string
                  description: |
                    [BinaryFileWrapper] The byteorder when reading an integer from multibyte data in a binary file. 
                    Should either be "big" or "little".
                separator:
                  type: string
                  description: |
                    [CsvFileWrapper] The separator used in the CSV file. The default is ",".
                label_index:
                  type: number
                  description: |
                    [CsvFileWrapper] Column index of the label.
                    For example, if the columns are "width", "height", "age", "label" you should set label_index to 3.
                ignore_first_line:
                  type: boolean
                  description: |
                    [CsvFileWrapper] If the first line is the table header, you can skip it setting this parameter to True. 
                    Default is False.
                encoding:
                  type: string
                  description: |
                    [CsvFileWrapper] Encoding of the CSV file. Default is utf-8.
                validate_file_content:
                  type: boolean
                  description: |
                    [CsvFileWrapper] Whether to validate the file content before inserting the data. It checks that it 
                    is a csv, that all rows are the same size and that the 'label' column exists. Default is True
            ignore_last_timestamp:
              type: boolean
              description: |
                Whether to ignore the last timestamp when scanning for new files, i.e., if this is set to false, in case a new file gets added to the storage that has a smaller timestamp than the latest file that the storage has already processed, the file is not processed.
            file_watcher_interval:
              type: number
              description: |
                The interval in seconds for the file watcher to wait between checking for new files.
            selector_batch_size:
              type: number
              description: |
                The number of samples per which we check for triggers and inform the selector.
          required:
            - name
            - description
            - version
            - base_path
            - filesystem_wrapper_type
            - file_wrapper_type
            - file_wrapper_config
      database:
        type: object
        properties:
          drivername:
            type: string
            description: |
              The drivername to use for the database.
          username:
            type: string
            description: |
              The username to use for the database.
          password:
            type: string
            description: |
              The password to use for the database.
          host:
            type: string
            description: |
              The host to use for the database.
          port:
            type: string
            description: |
              The port to use for the database.
          database:
            type: string
            description: |
              The database to use for the database.
          hash_partition_modulus:
            type: number
            description: |
              The modulus to use for the hash partitioning of the samples.
        required:
          - drivername
          - username
          - password
          - host
          - port
          - database
    required:
      - port
      - hostname
      - database
      - sample_batch_size
      - insertion_threads
  model_storage:
    type: object
    properties:
      port:
        type: string
        description: |
          The port to use for the model_storage grpc service.
      hostname:
        type: string
        description: |
          The hostname to use for the model_storage grpc service.
      ftp_port:
        type: string
        description: |
          The port of the FDP server used by the model_storage component.
      models_directory:
        type: string
        description: |
          The directory where we store the trained models.
    required:
      - hostname
      - port
      - ftp_port
  evaluator:
    type: object
    properties:
      port:
        type: string
        description: |
          The port to use for the evaluator grpc service.
      hostname:
        type: string
        description: |
          The hostname to use for the evaluator grpc service.
    required:
      - hostname
      - port
  metadata_database:
    type: object
    properties:
      drivername:
        type: string
        description: |
          The drivername to use for the database.
      username:
        type: string
        description: |
          The username to use for the database.
      password:
        type: string
        description: |
          The password to use for the database.
      host:
        type: string
        description: |
          The host to use for the database.
      port:
        type: string
        description: |
          The port to use for the database.
      database:
        type: string
        description: |
          The database to use for the database.
      hash_partition_modulus:
        type: number
        description: |
          The modulus to use for the hash partitioning of the metadata.
      seed:
        type: number
        description: |
          If provided, this number is used to seed the database. Must be in [-1,1].
    required:
      - drivername
      - username
      - password
      - host
      - port
      - database
  metadata_processor:
    type: object
    properties:
      port:
        type: string
        description: |
          The port to use for the metadata processor server.
      hostname:
        type: string
        description: |
          The hostname to use for the metadata processor server.
    selector:
      type: object
      properties:
        port:
          type: string
          description: |
            The port to use for the selector grpc service.
        hostname:
          type: string
          description: |
            The hostname to use for the selector grpc service.
        keys_in_selector_cache:
          type: number
          description: |
            How many keys each selector is allowed to cache in memory.
        sample_batch_size:
          type: number
          description: |
            The size of a batch when requesting sample keys for a trigger partition and worker. All new samples are returned, however, to reduce the size of a single answer the keys are batched in sizes of `sample_batch_size`.
        insertion_threads:
          type: number
          description: |
            The number of threads used to insert samples into the metadata DB. If set to <= 0, multithreaded inserts are disabled.
        trigger_sample_directory:
          type: string
          description: |
            The directory where the the TriggerTrainingSet (fixed set of samples to train on for one trigger) is stored.
        local_storage_directory:
          type: string
          description: |
            The directory where selection strategies that use the local storage backend persist data to.
        cleanup_storage_directories_after_shutdown:
          type: boolean
          description: |
            Whether to cleanup the trigger samples by deleting the directory after the selector has been shut down.
        ignore_existing_trigger_samples:
          type: boolean
          description: |
            Whether to ignore existing trigger samples when starting the selector. If set to false, the trigger sample directory has to be empty upon startup. May lead to unexpected behaviour if set to true and the trigger sample directory is not empty (e.g. duplicate trigger sample files)
      required:
        - port
        - hostname
        - keys_in_selector_cache
        - sample_batch_size
        - insertion_threads
        - trigger_sample_directory
        - local_storage_directory
    trainer_server:
      type: object
      properties:
        hostname:
          type: string
          description: |
            The hostname to use for the trainer_server grpc service.
        port:
          type: string
          description: |
            The port to use for the trainer_server grpc service.
        ftp_port:
          type: string
          description: |
            The port of the FDP server used by the trainer_server component.
        offline_dataset_directory:
          type: string
          description: |
            The directory where the selected samples are stored when downsampling in Sample-then-batch mode is used.
      required:
        - hostname
        - port
        - ftp_port
        - offline_dataset_directory
  tensorboard:
    type: object
    properties:
      port:
        type: string
        description: |
          The port on which tensorboard is run.
    required:
      - port
required:
  - project
  - storage
  - evaluator
  - model_storage
  - metadata_database
  - selector
  - trainer_server
