# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import modyn.evaluator.internal.grpc.generated.evaluator_pb2 as evaluator__pb2


class EvaluatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.evaluate_model = channel.unary_unary(
                '/modyn.evaluator.Evaluator/evaluate_model',
                request_serializer=evaluator__pb2.EvaluateModelRequest.SerializeToString,
                response_deserializer=evaluator__pb2.EvaluateModelResponse.FromString,
                )
        self.get_evaluation_status = channel.unary_unary(
                '/modyn.evaluator.Evaluator/get_evaluation_status',
                request_serializer=evaluator__pb2.EvaluationStatusRequest.SerializeToString,
                response_deserializer=evaluator__pb2.EvaluationStatusResponse.FromString,
                )
        self.get_final_evaluation = channel.unary_unary(
                '/modyn.evaluator.Evaluator/get_final_evaluation',
                request_serializer=evaluator__pb2.FinalEvaluationRequest.SerializeToString,
                response_deserializer=evaluator__pb2.FinalEvaluationResponse.FromString,
                )


class EvaluatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def evaluate_model(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_evaluation_status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_final_evaluation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EvaluatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'evaluate_model': grpc.unary_unary_rpc_method_handler(
                    servicer.evaluate_model,
                    request_deserializer=evaluator__pb2.EvaluateModelRequest.FromString,
                    response_serializer=evaluator__pb2.EvaluateModelResponse.SerializeToString,
            ),
            'get_evaluation_status': grpc.unary_unary_rpc_method_handler(
                    servicer.get_evaluation_status,
                    request_deserializer=evaluator__pb2.EvaluationStatusRequest.FromString,
                    response_serializer=evaluator__pb2.EvaluationStatusResponse.SerializeToString,
            ),
            'get_final_evaluation': grpc.unary_unary_rpc_method_handler(
                    servicer.get_final_evaluation,
                    request_deserializer=evaluator__pb2.FinalEvaluationRequest.FromString,
                    response_serializer=evaluator__pb2.FinalEvaluationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'modyn.evaluator.Evaluator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Evaluator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def evaluate_model(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modyn.evaluator.Evaluator/evaluate_model',
            evaluator__pb2.EvaluateModelRequest.SerializeToString,
            evaluator__pb2.EvaluateModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_evaluation_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modyn.evaluator.Evaluator/get_evaluation_status',
            evaluator__pb2.EvaluationStatusRequest.SerializeToString,
            evaluator__pb2.EvaluationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_final_evaluation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modyn.evaluator.Evaluator/get_final_evaluation',
            evaluator__pb2.FinalEvaluationRequest.SerializeToString,
            evaluator__pb2.FinalEvaluationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
