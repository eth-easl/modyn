syntax = "proto3";

package modyn.evaluator;

service Evaluator {
  rpc evaluate_model(EvaluateModelRequest) returns (EvaluateModelResponse) {}
  rpc get_evaluation_status(EvaluationStatusRequest) returns (EvaluationStatusResponse) {}
  rpc get_evaluation_result(EvaluationResultRequest) returns (EvaluationResultResponse) {}
  rpc cleanup_evaluations(EvaluationCleanupRequest) returns (EvaluationCleanupResponse) {}
}

message DatasetInfo {
  string dataset_id = 1;
  int32 num_dataloaders = 2;
  optional int64 start_timestamp = 3;
  optional int64 end_timestamp = 4;
}

enum EvaluationAbortedReason {
  UNKNOWN = 0;
  MODEL_NOT_EXIST_IN_METADATA = 1;
  MODEL_IMPORT_FAILURE = 2;
  MODEL_NOT_EXIST_IN_STORAGE = 3;
  DATASET_NOT_FOUND = 4;
  EMPTY_DATASET = 5;
  DOWNLOAD_MODEL_FAILURE = 6;
}

message PythonString { string value = 1; }

message JsonString { string value = 1; }

message EvaluateModelRequest {
  int32 model_id  = 1;
  DatasetInfo dataset_info = 2;
  string device = 3;
  int32 batch_size = 4;
  repeated JsonString metrics = 5;
  repeated string transform_list = 6;
  PythonString bytes_parser = 7;
  PythonString label_transformer = 8;
  optional PythonString tokenizer = 9;
}

message EvaluateModelResponse {
  bool evaluation_started = 1;
  int32 evaluation_id = 2;
  int64 dataset_size = 3;
  EvaluationAbortedReason eval_aborted_reason = 4;
}

message EvaluationStatusRequest { int32 evaluation_id = 1; }

message EvaluationStatusResponse {
  bool valid = 1;
  bool is_running = 2;
  bool state_available = 3;
  bool blocked = 4;
  optional string exception = 5;
  optional int64 batches_seen = 6;
  optional int64 samples_seen = 7;
}

message EvaluationData {
  string metric = 1;
  float result = 2;
}

message EvaluationResultRequest { int32 evaluation_id = 1; }

message EvaluationCleanupRequest { repeated int32 evaluation_ids = 1; }

message EvaluationResultResponse {
  bool valid = 1;
  repeated EvaluationData evaluation_data = 2;
}

message EvaluationCleanupResponse { repeated int32 succeeded = 1; }
