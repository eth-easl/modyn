syntax = "proto3";

package trainer;

service TrainerServer {
  rpc trainer_available(TrainerAvailableRequest)
      returns (TrainerAvailableResponse) {}
  rpc start_training(StartTrainingRequest) returns (StartTrainingResponse) {}
  rpc get_training_status(TrainingStatusRequest)
      returns (TrainingStatusResponse) {}
  rpc store_final_model(StoreFinalModelRequest) returns (StoreFinalModelResponse) {}
  rpc get_latest_model(GetLatestModelRequest) returns (GetLatestModelResponse) {
  }
}

message JsonString { string value = 1; }

message PythonString { string value = 1; }

message Data {
  string dataset_id = 1;
  int32 num_dataloaders = 2;
}

message TrainerAvailableRequest {}

message TrainerAvailableResponse { bool available = 1; }

message CheckpointInfo {
  int32 checkpoint_interval = 1;
  string checkpoint_path = 2;
}

message StartTrainingRequest {
  int32 pipeline_id = 1;
  int32 trigger_id = 2;
  string device = 3;
  bool use_pretrained_model = 4;
  bool load_optimizer_state = 5;
  int32 pretrained_model_id = 6;
  int32 batch_size = 7;
  JsonString torch_optimizers_configuration = 8;
  string torch_criterion = 9;
  JsonString criterion_parameters = 10;
  Data data_info = 11;
  CheckpointInfo checkpoint_info = 12;
  PythonString bytes_parser = 13;
  repeated string transform_list = 14;
  JsonString lr_scheduler = 15;
  PythonString label_transformer = 16;
  JsonString grad_scaler_configuration = 17;
  int32 epochs_per_trigger = 18;
  int32 num_prefetched_partitions = 19;
  int32 parallel_prefetch_requests = 20;
  optional int32 seed = 21;
  optional PythonString tokenizer = 22;
}

message StartTrainingResponse {
  bool training_started = 1;
  int32 training_id = 2;
}

message TrainingStatusRequest { int32 training_id = 1; }

message TrainingStatusResponse {
  bool valid = 1;
  bool is_running = 2;
  bool is_training = 3;
  bool state_available = 4;
  bool blocked = 5;
  JsonString log = 6;
  optional string exception = 7;
  optional int64 batches_seen = 8;
  optional int64 samples_seen = 9;
  optional int64 downsampling_batches_seen = 10;
  optional int64 downsampling_samples_seen = 11;
}

message StoreFinalModelRequest { int32 training_id = 1; }

message StoreFinalModelResponse {
  bool valid_state = 1;
  int32 model_id = 2;
}

message GetLatestModelRequest { int32 training_id = 1; }

message GetLatestModelResponse {
  bool valid_state = 1;
  string model_path = 2;
}
