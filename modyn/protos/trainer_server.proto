syntax = "proto3";

package trainer;

service TrainerServer {
    rpc start_training(TrainerServerRequest) returns (TrainerServerResponse) {}
    rpc trainer_available(TrainerAvailableRequest) returns (TrainerAvailableResponse) {}
}

message TrainerServerRequest {
    string model_id = 1;
    string torch_optimizer = 2;
    int32 batch_size = 3;
    map<string, VarTypeParameter> optimizer_parameters = 4;
    Optional string load_checkpoint_path = 5;
    map<string, VarTypeParameter> model_configuration = 6;
    Data data_info = 7;
    CheckpointInfo checkpoint_info = 8;
}

message TrainerServerResponse {
    int32 training_id = 1;
}

message VarTypeParameter {
    oneof parameter {
        float float_value = 1;
        int32 int_value = 2;
        bool bool_value = 3;
        string string_value = 4;
    }
}

message Data {
    string dataset_id = 1;
    int32 num_dataloaders = 2;
}

message TrainerAvailableRequest {

}

message TrainerAvailableResponse {
    bool available = 1;
}

message CheckpointInfo {
    int32 checkpoint_interval = 1;
    string checkpoint_path = 2;
}