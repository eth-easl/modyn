syntax = "proto3";

package metadata_processor;

service MetadataProcessor {
  rpc register_pipeline(RegisterPipelineRequest) returns (PipelineResponse) {}
  rpc process_training_metadata(TrainingMetadataRequest)
      returns (TrainingMetadataResponse) {}
}

message RegisterPipelineRequest {
  int32 pipeline_id = 1;
  string processor_type = 2;
}

message PipelineResponse {}

message TrainingMetadataRequest {
  int32 pipeline_id = 1;
  int32 trigger_id = 2;

  PerTriggerMetadata trigger_metadata = 3;
  repeated PerSampleMetadata sample_metadata = 4; // TODO(#210): we will need to support large number of samples in the future. We should use a streaming RPC to support that.
}

message PerTriggerMetadata { float loss = 1; }

message PerSampleMetadata {
  string sample_id = 1;
  float loss = 2;
}

message TrainingMetadataResponse {}