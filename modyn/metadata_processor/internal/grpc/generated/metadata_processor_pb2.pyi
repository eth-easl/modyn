"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RegisterPipelineRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_ID_FIELD_NUMBER: builtins.int
    PROCESSOR_TYPE_FIELD_NUMBER: builtins.int
    pipeline_id: builtins.int
    processor_type: builtins.str
    def __init__(
        self,
        *,
        pipeline_id: builtins.int = ...,
        processor_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["pipeline_id", b"pipeline_id", "processor_type", b"processor_type"]
    ) -> None: ...

global___RegisterPipelineRequest = RegisterPipelineRequest

@typing.final
class PipelineResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___PipelineResponse = PipelineResponse

@typing.final
class TrainingMetadataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PIPELINE_ID_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    TRIGGER_METADATA_FIELD_NUMBER: builtins.int
    SAMPLE_METADATA_FIELD_NUMBER: builtins.int
    pipeline_id: builtins.int
    trigger_id: builtins.int
    @property
    def trigger_metadata(self) -> global___PerTriggerMetadata: ...
    @property
    def sample_metadata(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerSampleMetadata]:
        """TODO(#210): we will need to support large number of samples in the future. We should use a streaming RPC to support that."""

    def __init__(
        self,
        *,
        pipeline_id: builtins.int = ...,
        trigger_id: builtins.int = ...,
        trigger_metadata: global___PerTriggerMetadata | None = ...,
        sample_metadata: collections.abc.Iterable[global___PerSampleMetadata] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["trigger_metadata", b"trigger_metadata"]) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "pipeline_id",
            b"pipeline_id",
            "sample_metadata",
            b"sample_metadata",
            "trigger_id",
            b"trigger_id",
            "trigger_metadata",
            b"trigger_metadata",
        ],
    ) -> None: ...

global___TrainingMetadataRequest = TrainingMetadataRequest

@typing.final
class PerTriggerMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOSS_FIELD_NUMBER: builtins.int
    loss: builtins.float
    def __init__(
        self,
        *,
        loss: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["loss", b"loss"]) -> None: ...

global___PerTriggerMetadata = PerTriggerMetadata

@typing.final
class PerSampleMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_ID_FIELD_NUMBER: builtins.int
    LOSS_FIELD_NUMBER: builtins.int
    sample_id: builtins.str
    loss: builtins.float
    def __init__(
        self,
        *,
        sample_id: builtins.str = ...,
        loss: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["loss", b"loss", "sample_id", b"sample_id"]) -> None: ...

global___PerSampleMetadata = PerSampleMetadata

@typing.final
class TrainingMetadataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TrainingMetadataResponse = TrainingMetadataResponse
