pipeline:
  name: MNIST Test Pipeline
  description: Example pipeline
  version: 1.0.0
model:
  id: ResNet18
  config:
    num_classes: 10
model_storage:
  full_model_strategy:
    name: "PyTorchFullModel"
training:
  gpus: 1
  device: "cuda:0"
  dataloader_workers: 2
  use_previous_model: True
  initial_model: random
  batch_size: 64
  shuffle: True
  optimizers:
    - name: "default"
      algorithm: "SGD"
      source: "PyTorch"
      param_groups:
        - module: "model"
          config:
            lr: 0.1
            momentum: 0.001
  optimization_criterion:
    name: "CrossEntropyLoss"
  checkpointing:
    activated: False
data:
  dataset_id: mnist
  transformations:
    ["transforms.ToTensor()", "transforms.Normalize((0.1307,), (0.3081,))"]
  bytes_parser_function: |
    from PIL import Image
    import io
    def bytes_parser_function(data: memoryview) -> Image:
      return Image.open(io.BytesIO(data)).convert("RGB")
trigger:
  id: DataAmountTrigger
  num_samples: 2000
selection_strategy:
  name: NewDataStrategy
  maximum_keys_in_memory: 1000
  storage_backend: "database"
  limit: -1
  tail_triggers: 0
