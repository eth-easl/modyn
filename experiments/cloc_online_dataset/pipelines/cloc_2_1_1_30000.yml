
pipeline:
    name: cloc_2_1_1_30000
    description: CLOC Training.
    version: 1.0.0
model:
  id: ResNet50
  config:
    num_classes: 713
model_storage:
  full_model_strategy:
    name: "PyTorchFullModel"
training:
  gpus: 1
  device: "cuda:0"
  amp: False
  dataloader_workers: 2
  num_prefetched_partitions: 1
  parallel_prefetch_requests: 1
  use_previous_model: True
  initial_model: random
  initial_pass:
    activated: False
  batch_size: 256
  optimizers:
    - name: "default"
      algorithm: "SGD"
      source: "PyTorch"
      param_groups:
        - module: "model"
          config:
            lr: 0.025
            weight_decay: 0.0001
            momentum: 0.9
  optimization_criterion:
    name: "CrossEntropyLoss"
  checkpointing:
    activated: False
  selection_strategy:
    name: NewDataStrategy
    maximum_keys_in_memory: 30000
    config:
      storage_backend: "database"
      limit: -1
      reset_after_trigger: True
data:
  dataset_id: cloc
  transformations: ["transforms.RandomResizedCrop(224)",
                    "transforms.RandomHorizontalFlip()",
                    "transforms.ToTensor()",
                    "transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])"]
  bytes_parser_function: |
    from PIL import Image
    import io
    def bytes_parser_function(data: bytes) -> Image:
      return Image.open(io.BytesIO(data)).convert("RGB")
trigger:
  id: DataAmountTrigger
  trigger_config:
    data_points_for_trigger: 500000
