runs:
  using: "composite"
  steps: 
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Check if shared miniconda installation exists (we are on a Github Runner)
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "/usr/share/miniconda/envs"

      - name: Set Github runner Conda path
        if: steps.check_files.outputs.files_exists == 'true'
        run: echo "CONDAPATH=/usr/share/miniconda/envs" >> $GITHUB_ENV 
        shell: bash

      - name: Fix permissions for Github runner
        if: steps.check_files.outputs.files_exists == 'true'
        run: sudo chown -R $(whoami):$(id -ng) ${CONDAPATH}
        shell: bash
        
      - name: If non Github runner, check if CONDA environment variable is set
        id: check_conda_env
        shell: bash
        run: |
          if [ "$CONDA" == "" ]; then
            echo "condapresent=false" >> $GITHUB_OUTPUT
          else
            echo "condapresent=true" >> $GITHUB_OUTPUT
          fi
        if: steps.check_files.outputs.files_exists == 'false'

      - name: Setup miniconda if not exists on non Github runner
        if: (steps.check_files.outputs.files_exists == 'false') && (steps.check_conda_env.outputs.condapresent == 'false')
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: '3.10'
          miniconda-version: "latest"

      - name: Set custom conda path for either existing or new conda installation, both reside in CONDA
        if: steps.check_files.outputs.files_exists == 'false'
        run: echo "CONDAPATH=${CONDA}" >> $GITHUB_ENV 
        shell: bash

      - name: Add conda to path 
        if: steps.check_files.outputs.files_exists == 'false'
        run: echo "${CONDAPATH}/bin" >> $GITHUB_PATH 
        shell: bash

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash
      
      # increase to reset cache manually
      - name: Set cache number
        run: echo "CACHE_NUMBER=6" >> $GITHUB_ENV 
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ${{ env.CONDAPATH }}
          key: conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Setup requirements
        run: |
          conda update -n base -c defaults conda
          conda update --all
          conda env create -f ./environment.yml
          conda run -n modyn pip install -r dev-requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash

      - name: Reinstall modyn in case of cache
        run: conda run -n modyn pip install -e .
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash