name: linting-and-tests
on: [pull_request]

defaults:
  run:
    shell: bash

jobs:

### Integration Tests ###
# We have them in the same workflow because it's impossible to have a simple "if workflow A runs through completely, then workflow B should run" pipeline on Github currently

# Checks whether the base container works correctly.
  dockerized-unittests:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup base container
      uses: ./.github/actions/base

    - name: Setup dev-requirements and run pytest within container
      run: docker run modynbase conda run -n modyn bash -c "pip install -r dev-requirements.txt && echo Running pytest && pytest"


# Tests whether docker-compose up starts all components successfully and integration tests run through
# Only one job to reduce Github CI usage
  integrationtests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs:
      - flake8
      - mypy-typechecking
      - pylint
      - unittests
      - isort
      - black
      - dockerized-unittests

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Start docker compose and exit when tests run through
        run: bash run_integrationtests.sh